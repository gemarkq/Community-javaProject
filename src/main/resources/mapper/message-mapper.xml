<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiankun.community.dao.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <select id="selectConversations" resultType="com.jiankun.community.entity.Message">
        select <include refid="selectFields"/>
        from message
        where id in (
            select max(m.id) from message m
            where m.status != 2
            and m.from_id != 1
            and (m.from_id=#{userId} or m.to_id=#{userId})
            group by m.conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(m.maxid) from (
           select max(id) as maxid from message
           where status != 2 and from_id != 1 and (from_id = #{userId} or to_id = #{userId})
           group by conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="com.jiankun.community.entity.Message">
        select <include refid="selectFields"/>
        from message
        where status != 2 and from_id != 1 and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2 and from_id != 1 and conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0 and from_id != 1 and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

</mapper>